
test.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
_init():
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2fa2]        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2fa3]        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	endbr64 
    1034:	bnd jmp QWORD PTR [rip+0x2fbd]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    103b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000001040 <_start>:
_start():
    1040:	endbr64 
    1044:	xor    ebp,ebp
    1046:	mov    r9,rdx
    1049:	pop    rsi
    104a:	mov    rdx,rsp
    104d:	and    rsp,0xfffffffffffffff0
    1051:	push   rax
    1052:	push   rsp
    1053:	lea    r8,[rip+0x1b6]        # 1210 <__libc_csu_fini>
    105a:	lea    rcx,[rip+0x13f]        # 11a0 <__libc_csu_init>
    1061:	lea    rdi,[rip+0xc1]        # 1129 <main>
    1068:	call   QWORD PTR [rip+0x2f72]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    106e:	hlt    
    106f:	nop

0000000000001070 <deregister_tm_clones>:
deregister_tm_clones():
    1070:	lea    rdi,[rip+0x2f99]        # 4010 <__TMC_END__>
    1077:	lea    rax,[rip+0x2f92]        # 4010 <__TMC_END__>
    107e:	cmp    rax,rdi
    1081:	je     1098 <deregister_tm_clones+0x28>
    1083:	mov    rax,QWORD PTR [rip+0x2f4e]        # 3fd8 <_ITM_deregisterTMCloneTable>
    108a:	test   rax,rax
    108d:	je     1098 <deregister_tm_clones+0x28>
    108f:	jmp    rax
    1091:	nop    DWORD PTR [rax+0x0]
    1098:	ret    
    1099:	nop    DWORD PTR [rax+0x0]

00000000000010a0 <register_tm_clones>:
register_tm_clones():
    10a0:	lea    rdi,[rip+0x2f69]        # 4010 <__TMC_END__>
    10a7:	lea    rsi,[rip+0x2f62]        # 4010 <__TMC_END__>
    10ae:	sub    rsi,rdi
    10b1:	mov    rax,rsi
    10b4:	shr    rsi,0x3f
    10b8:	sar    rax,0x3
    10bc:	add    rsi,rax
    10bf:	sar    rsi,1
    10c2:	je     10d8 <register_tm_clones+0x38>
    10c4:	mov    rax,QWORD PTR [rip+0x2f25]        # 3ff0 <_ITM_registerTMCloneTable>
    10cb:	test   rax,rax
    10ce:	je     10d8 <register_tm_clones+0x38>
    10d0:	jmp    rax
    10d2:	nop    WORD PTR [rax+rax*1+0x0]
    10d8:	ret    
    10d9:	nop    DWORD PTR [rax+0x0]

00000000000010e0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    10e0:	endbr64 
    10e4:	cmp    BYTE PTR [rip+0x2f25],0x0        # 4010 <__TMC_END__>
    10eb:	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	push   rbp
    10ee:	cmp    QWORD PTR [rip+0x2f02],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f6:	mov    rbp,rsp
    10f9:	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	mov    rdi,QWORD PTR [rip+0x2f06]        # 4008 <__dso_handle>
    1102:	call   1030 <__cxa_finalize@plt>
    1107:	call   1070 <deregister_tm_clones>
    110c:	mov    BYTE PTR [rip+0x2efd],0x1        # 4010 <__TMC_END__>
    1113:	pop    rbp
    1114:	ret    
    1115:	nop    DWORD PTR [rax]
    1118:	ret    
    1119:	nop    DWORD PTR [rax+0x0]

0000000000001120 <frame_dummy>:
frame_dummy():
    1120:	endbr64 
    1124:	jmp    10a0 <register_tm_clones>

0000000000001129 <main>:
main():
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:1
    1129:	endbr64 
    112d:	push   rbp
    112e:	mov    rbp,rsp
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:3
    1131:	mov    DWORD PTR [rbp-0x14],0x2
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:4
    1138:	mov    DWORD PTR [rbp-0x10],0x5
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:5
    113f:	mov    edx,DWORD PTR [rbp-0x10]
    1142:	mov    eax,DWORD PTR [rbp-0x14]
    1145:	imul   eax,edx
    1148:	add    eax,0x2a
    114b:	mov    DWORD PTR [rbp-0xc],eax
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:6
    114e:	mov    eax,DWORD PTR [rbp-0xc]
    1151:	and    eax,0x5
    1154:	mov    DWORD PTR [rbp-0x8],eax
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:7
    1157:	mov    eax,DWORD PTR [rbp-0x10]
    115a:	movsxd rdx,eax
    115d:	imul   rdx,rdx,0x78787879
    1164:	shr    rdx,0x20
    1168:	sar    edx,0x3
    116b:	sar    eax,0x1f
    116e:	sub    edx,eax
    1170:	mov    eax,edx
    1172:	mov    DWORD PTR [rbp-0x4],eax
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:8
    1175:	mov    eax,DWORD PTR [rbp-0x14]
    1178:	or     eax,0xfffffffd
    117b:	mov    DWORD PTR [rbp-0x14],eax
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:9
    117e:	mov    edx,DWORD PTR [rbp-0x4]
    1181:	mov    eax,DWORD PTR [rbp-0x4]
    1184:	imul   eax,edx
    1187:	mov    edx,DWORD PTR [rbp-0xc]
    118a:	mov    ecx,0x3
    118f:	sub    ecx,edx
    1191:	mov    edx,ecx
    1193:	add    eax,edx
    1195:	mov    DWORD PTR [rbp-0x4],eax
/mnt/c/egyetem/2021-2022-2/decompiler/src/example.c:10
    1198:	mov    eax,0x0
    119d:	pop    rbp
    119e:	ret    
    119f:	nop

00000000000011a0 <__libc_csu_init>:
__libc_csu_init():
    11a0:	endbr64 
    11a4:	push   r15
    11a6:	lea    r15,[rip+0x2c43]        # 3df0 <__frame_dummy_init_array_entry>
    11ad:	push   r14
    11af:	mov    r14,rdx
    11b2:	push   r13
    11b4:	mov    r13,rsi
    11b7:	push   r12
    11b9:	mov    r12d,edi
    11bc:	push   rbp
    11bd:	lea    rbp,[rip+0x2c34]        # 3df8 <__do_global_dtors_aux_fini_array_entry>
    11c4:	push   rbx
    11c5:	sub    rbp,r15
    11c8:	sub    rsp,0x8
    11cc:	call   1000 <_init>
    11d1:	sar    rbp,0x3
    11d5:	je     11f6 <__libc_csu_init+0x56>
    11d7:	xor    ebx,ebx
    11d9:	nop    DWORD PTR [rax+0x0]
    11e0:	mov    rdx,r14
    11e3:	mov    rsi,r13
    11e6:	mov    edi,r12d
    11e9:	call   QWORD PTR [r15+rbx*8]
    11ed:	add    rbx,0x1
    11f1:	cmp    rbp,rbx
    11f4:	jne    11e0 <__libc_csu_init+0x40>
    11f6:	add    rsp,0x8
    11fa:	pop    rbx
    11fb:	pop    rbp
    11fc:	pop    r12
    11fe:	pop    r13
    1200:	pop    r14
    1202:	pop    r15
    1204:	ret    
    1205:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000001210 <__libc_csu_fini>:
__libc_csu_fini():
    1210:	endbr64 
    1214:	ret    

Disassembly of section .fini:

0000000000001218 <_fini>:
_fini():
    1218:	endbr64 
    121c:	sub    rsp,0x8
    1220:	add    rsp,0x8
    1224:	ret    
